# -*- coding: utf-8 -*-
"""Spam.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iQoIhnYZtiket2ZQAAQA0wN5TiDSzHs6
"""

import nltk
import re
import pandas as pd
import numpy as np
from nltk.stem import WordNetLemmatizer
from nltk.stem import PorterStemmer
from nltk.corpus import stopwords

dfs = pd.read_csv("/content/spams.csv", sep='\t', names=['label','df'])

nltk.download('punkt')
nltk.download('stopwords')
nltk.download('wordnet')

dfs

ps = PorterStemmer()
wnl = WordNetLemmatizer()

corpus=[]
for i in range(len(dfs)):
    review = re.sub('[^a-zA-Z]',' ',dfs['df'][i])
    review = review.lower()
    review = review.split()
    review = [wnl.lemmatize(word) for word in review if word not in set(stopwords.words('english'))]
    review = ' '.join(review)
    corpus.append(review)
corpus

from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(max_features = 1500)
x = cv.fit_transform(corpus).toarray()
x

from sklearn.feature_extraction.text import TfidfVectorizer
cv = TfidfVectorizer(max_features = 1500)
x = cv.fit_transform(corpus).toarray()
x

y=pd.get_dummies(dfs['label'])
y=y.iloc[:,1].values
y

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.20, random_state = 0)

# Training model using Naive bayes classifier
from sklearn.naive_bayes import MultinomialNB
model = MultinomialNB().fit(X_train, y_train)
y_pred=model.predict(X_test)
y_pred

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
cm

from sklearn.metrics import accuracy_score
score=accuracy_score(y_pred,y_test)
score